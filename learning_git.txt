创建版本库：进入要创建版本库的位置，mkdir 
        初始化 git init
添加文件：git add filename

提交文件：git commit filename -m "message"

查看仓库状态 git status

查看不同 git diff
       git diff HEAD --filename 查看工作区和版本库里的区别

    历史记录 git log
  (--pretty=oneline)

版本回退 git reset --hard HEAD^
       git reset --hard commitid (不需要完全)

记录历史命令 git reflog
    
丢弃工作区的修改 git checkout --filename

丢弃暂存区的修改 git reset HEAD filename

已提交到版本库 版本回退（没有推送到远程库前）

删除文件 rm filename 版本库中还有(版本库中没有的文件删除后无法恢复）
   确实要从版本库中删除 git commit -m "message"
   删错了，恢复到最新版本 git checkout --filename

在建立远程连接的过程中，出现了没有访问权限的问题，解决方法：https://stackoverflow.com/questions/2643502/how-to-solve-permission-denied-publickey-error-
when-using-git。我认为关键在于git config的设置。在设置之后在进行克隆就可以了，关键是权限的设置。

分支：在分支上进行工作，用master发布新版本
 
创建分支： git branch branchname

切换分支： git checkout branchname

创建并切换：git checkout -b branchname 

查看分支： git branch, 列出所有分支，当前分支前加*

在分支上修改文件并提交操作如上

切换回master：git checkout master
                    
将分支上的内容合并到master上：git merge branchname

删除分支：git branch -d branchname（默认使用fast forward模式）删除之后无法恢复，branch的信息全部丢失

switch 的分支操作：
    创建并切换到新分支：git switch -c branchname
    切换到已有分支：git swtich existing_branchname

有时git无法自动合并分支，这时需要先解决冲突 可以用git status查看冲突文件

查看合并分支图：git log --grap

git 默认fast forward模式，强制禁用： --no-ff参数

git branch --no-ff -m "message"  branchname

丢弃一个没有被合并过的分支：git branch -D name

bug处理
保存现场：git stash
恢复现场：git stash list
       +git stash apply 之后需要调用git stash drop删除
       +git stash pop 恢复之后删除

将master上的修改复制到分支上：git cherry-pick 编号
                        
标签管理
切换到需要打标签的分支上，git tag -a <name> -m "说明"（默认打在最新commit的版本上）
                    
查看所有标签：git tag（按照字母排序）
                
给其他版本打标签：git tag name commitid（commitid可以通过git log查看）
                        
查看标签信息：git show tagname
                        
删除标签：git tag -d name
       从远程删除：先从本地删除，然后git push origin :refs/tags/<tagname>
                        
推送标签到远程：git push origin name/--tags（推送全部）
                        
shapelet

   


